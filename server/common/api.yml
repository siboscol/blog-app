swagger: "2.0"
info:
  version: 1.0.0
  title: blog
  description: Simple Blog Application
basePath: /api/v1
tags:
  - name: Posts
    description: Posts endpoints
  - name: Comments
    description: Comments endpoints
  - name: Specification
    description: The swagger API specification

consumes:
  - application/json
produces:
  - application/json


definitions:
  PostBody:
    type: object
    title: post
    required:
      - title
      - body
    properties:
      title:
        type: string
        title: post n.1
      body:
        type: string
        body: Lorem Ipsum lorem ipsum..
  CommentBody:
    type: object
    title: comment
    required:
      - text
    properties:
      text:
        type: string
        text: Some comment
      username:
        type: string
        username: sberto

paths:
  /posts:
    get:
      tags:
        - Posts
      description: Fetch all posts
      responses:
        200:
          description: Returns all posts
    post:
      tags:
        - Posts
      description: Create a new Post
      parameters:
        - name: post
          in: body
          description: an example
          required: true
          schema: 
            $ref: "#/definitions/PostBody"
      responses:
        200:
          description: Returns all examples

  /posts/{id}:
    get:
      tags:
        - Posts
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the Post to retrieve
          type: integer
      responses:
        200:
          description: Return the Post with the specified id
        404:
          description: Post not found

  /posts/{postId}/comments:
    get:
      tags:
        - Comments
      parameters:
        - name: postId
          in: path
          required: true
          description: The id of the Post to retrieve comments from
          type: integer
      responses:
        200:
          description: Return a list of comments for the specified Post id
        404:
          description: Post not found
    post:
      tags:
        - Comments
      description: Create a new Post
      parameters:
        - name: postId
          in: path
          required: true
          description: The id of the Post where to create a new comment
          type: integer
        - name: comment
          in: body
          description: a new comment for the post
          required: true
          schema: 
            $ref: "#/definitions/CommentBody"
      responses:
        200:
          description: Returns the commented created
    
  /posts/{postId}/comments/{commentId}:
    get:
      tags:
        - Comments
      parameters:
        - name: postId
          in: path
          required: true
          description: The id of the Post to retrieve comments from
          type: integer
        - name: commentId
          in: path
          required: true
          description: The id of the Comment to retrieve from the post
          type: integer
      responses:
        200:
          description: Return the comment for the specified Post id and Comment id
        404:
          description: Comment not found
    put:
      tags:
        - Comments
      description: Update a comment
      parameters:
        - name: postId
          in: path
          required: true
          description: The id of the Post where to create a new comment
          type: integer
        - name: commentId
          in: path
          required: true
          description: The id of the Comment to retrieve from the post
          type: integer
        - name: comment
          in: body
          description: new text of comment for the specified comment id and post id
          required: true
          schema: 
            $ref: "#/definitions/CommentBody"
      responses:
        200:
          description: Returns the commented updated

  /spec:
    get:
      tags:
        - Specification
      responses:
        200:
          description: Return the API specification